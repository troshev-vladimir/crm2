{"version":3,"file":"js/457.4ec9a8fc.js","mappings":"uKAOe,SAASA,IACtB,OAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAChB,C,mSCsFA,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MACTC,GAAKP,EAAAA,EAAAA,KAELQ,GAAcC,EAAAA,EAAAA,IAAI,IAClBC,GAAkBD,EAAAA,EAAAA,IAAI,IACtBE,GAAeF,EAAAA,EAAAA,IAAI,IAEnBG,GAAeH,EAAAA,EAAAA,KAAI,GAEnBI,GAAoBJ,EAAAA,EAAAA,IAAI,MAE9B,SAASK,IACPX,EAAMY,OAAO,qBAAsB,CACjCC,KAAMR,EACNS,SAAUP,EACVQ,MAAOP,IAGTR,EAAMY,OAAO,kBACbV,EAAOc,KAAK,CAAEC,KAAM,KACtB,CAEA,MAAMC,GAAWZ,EAAAA,EAAAA,IAAI,IACfa,GAAeb,EAAAA,EAAAA,IAAI,IACnBc,GAAgBd,EAAAA,EAAAA,KAAI,GAU1B,SAASe,IACP,MAAMC,EAAOtB,EAAMuB,MAAMC,MAAMC,UAAUC,MACtCC,GAAOA,EAAGd,OAASK,EAASU,QAG3BN,GAAQA,EAAKR,WAAaK,EAAaS,OAASN,EAAKO,QACvD7B,EAAMY,OAAO,kBACbV,EAAOc,KAAK,CAAEC,KAAM,MACpBb,EAAG0B,OAAO,CACRC,KAAM,WACNC,QAAS,8BAGXb,EAAaS,MAAQ,GACrBV,EAASU,MAAQ,GACZN,EAAKO,OAMRzB,EAAG0B,OAAO,CACRC,KAAM,WACNC,QAAS,4BAPX5B,EAAG0B,OAAO,CACRC,KAAM,WACNC,QAAS,0BASjB,C,OAnCAC,EAAAA,EAAAA,IAAM,CAACf,EAAUC,IAAe,EAAEN,EAAMC,MAEpCM,EAAcQ,OADZf,IAAQC,CAIZ,I,4jEC5HF,MAAMoB,EAAc,EAEpB,QAOA,IAAS,EAAQ,aAAc,CAACC,OAAM,SAAK,YAAQ,UAAM,iBAAa,K","sources":["webpack://teleport/./node_modules/quasar/src/composables/use-quasar.js","webpack://teleport/./src/views/AuthView.vue","webpack://teleport/./src/views/AuthView.vue?1137"],"sourcesContent":["import { inject } from 'vue'\nimport { quasarKey } from '../utils/private/symbols.js'\n\n/**\n * Returns the $q instance.\n * Equivalent to `this.$q` inside templates.\n */\nexport default function useQuasar () {\n  return inject(quasarKey)\n}\n","<template>\r\n  <div class=\"q-pa-md\">\r\n    <div class=\"row q-mb-lg\">\r\n      <div class=\"col-12 q-mb-md\">\r\n        <q-input outlined label=\"Имя пользователя\" v-model=\"userName\" dense />\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <q-input\r\n          outlined\r\n          label=\"Пароль\"\r\n          type=\"password\"\r\n          v-model=\"userPassword\"\r\n          dense\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <q-btn\r\n          class=\"q-px-xl q-py-xs bg-indigo-13 q-mr-md\"\r\n          push\r\n          label=\"Войти\"\r\n          :disable=\"buttonDisable\"\r\n          @click=\"authHandler\"\r\n        />\r\n        <q-btn\r\n          class=\"q-px-xl q-py-xs bg-indigo-13\"\r\n          push\r\n          label=\"Зарегистрироваться\"\r\n          @click=\"registration = true\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <q-dialog v-model=\"registration\">\r\n      <q-card class=\"q-pa-lg q-col-gutter-y-md\">\r\n        <q-input\r\n          outlined\r\n          label=\"Имя\"\r\n          v-model=\"newUserName\"\r\n          dense\r\n          :rules=\"[(val) => !!val || 'Поле обязательно']\"\r\n        />\r\n        <q-input\r\n          outlined\r\n          type=\"password\"\r\n          label=\"Пароль\"\r\n          :rules=\"[(val) => !!val || 'Поле обязательно']\"\r\n          v-model=\"newUserPassword\"\r\n          dense\r\n        />\r\n        <q-input\r\n          ref=\"newUserPhoneInput\"\r\n          outlined\r\n          label=\"Телефон\"\r\n          type=\"tel\"\r\n          mask=\"+7 (###) ## ## ###\"\r\n          :rules=\"[\r\n            (val) => !!val || 'Поле обязательно',\r\n            (val) => val.length > 17 || 'Поле заполнено не корректно',\r\n          ]\"\r\n          v-model=\"newUserPhone\"\r\n          dense\r\n        />\r\n\r\n        <q-card-actions>\r\n          <q-btn\r\n            class=\"q-px-xl q-py-xs bg-indigo-13 q-mr-md\"\r\n            push\r\n            label=\"Закрыть\"\r\n            @click=\"registration = false\"\r\n          />\r\n          <q-btn\r\n            class=\"q-px-xl q-py-xs bg-indigo-13\"\r\n            push\r\n            label=\"Зарегистрироваться\"\r\n            @click=\"regHandler\"\r\n            :disable=\"\r\n              !newUserName ||\r\n              !newUserPassword ||\r\n              !newUserPhone ||\r\n              newUserPhoneInput.hasError\r\n            \"\r\n          />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport { useQuasar } from \"quasar\";\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst $q = useQuasar();\r\n\r\nconst newUserName = ref(\"\");\r\nconst newUserPassword = ref(\"\");\r\nconst newUserPhone = ref(\"\");\r\n\r\nconst registration = ref(false);\r\n\r\nconst newUserPhoneInput = ref(null);\r\n\r\nfunction regHandler() {\r\n  store.commit(\"users/registerUser\", {\r\n    name: newUserName,\r\n    password: newUserPassword,\r\n    phone: newUserPhone,\r\n  });\r\n\r\n  store.commit(\"user/authorize\");\r\n  router.push({ path: \"/\" });\r\n}\r\n\r\nconst userName = ref(\"\");\r\nconst userPassword = ref(\"\");\r\nconst buttonDisable = ref(true);\r\n\r\nwatch([userName, userPassword], ([name, password]) => {\r\n  if (name && password) {\r\n    buttonDisable.value = false;\r\n  } else {\r\n    buttonDisable.value = true;\r\n  }\r\n});\r\n\r\nfunction authHandler() {\r\n  const user = store.state.users.usersData.find(\r\n    (el) => el.name === userName.value\r\n  );\r\n\r\n  if (user && user.password === userPassword.value && user.status) {\r\n    store.commit(\"user/authorize\");\r\n    router.push({ path: \"/\" });\r\n    $q.notify({\r\n      type: \"positive\",\r\n      message: \"Вы успешно залогированы\",\r\n    });\r\n  } else {\r\n    userPassword.value = \"\";\r\n    userName.value = \"\";\r\n    if (!user.status) {\r\n      $q.notify({\r\n        type: \"negative\",\r\n        message: \"Пользователь выключен\",\r\n      });\r\n    } else {\r\n      $q.notify({\r\n        type: \"negative\",\r\n        message: \"Нет такого пользователя\",\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import script from \"./AuthView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AuthView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QBtn,QDialog,QCard,QCardActions});\n"],"names":["useQuasar","inject","quasarKey","store","useStore","router","useRouter","$q","newUserName","ref","newUserPassword","newUserPhone","registration","newUserPhoneInput","regHandler","commit","name","password","phone","push","path","userName","userPassword","buttonDisable","authHandler","user","state","users","usersData","find","el","value","status","notify","type","message","watch","__exports__","QInput"],"sourceRoot":""}