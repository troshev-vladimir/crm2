{"version":3,"file":"js/781.134e370c.js","mappings":"uKAOe,SAASA,IACtB,OAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAChB,C,0TCgBMC,GAASC,EAAAA,EAAAA,MAGTC,GAAWC,EAAAA,EAAAA,IAAIC,EAAMC,OAAOC,MAC5BC,GAAYJ,EAAAA,EAAAA,IAAIC,EAAMC,OAAOG,O,OAEnCC,EAAAA,EAAAA,IAAM,CAACP,EAAUK,IAAY,EAAEG,EAAaC,MAC1CC,EAAK,gBAAiB,CAAEN,KAAMI,EAAaF,MAAOG,IAClD,MAAME,EAAQ,CAAEP,KAAMJ,EAASY,MAAON,MAAOD,EAAUO,OAEvDC,OAAOC,KAAKH,GAAOI,SAASC,IACrBL,EAAMK,WACFL,EAAMK,GACf,IAGFlB,EAAOmB,KAAK,CAAEN,SAAQ,I,wdCtCxB,MAAMO,EAAc,EAEpB,QAGA,IAAS,EAAQ,aAAc,CAACC,OAAM,M,qFCqBtC,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAQF,EAAMG,MAAMD,MAAME,UAC1BC,GAAQC,EAAAA,EAAAA,MACd,IAAIC,GAAO1B,EAAAA,EAAAA,IAAIqB,GACf,MAAMM,GAAKjC,EAAAA,EAAAA,KAELkC,EAAsB,CAC1BC,GAAI,gBACJ1B,KAAM,MACNE,MAAO,UACPyB,QAAS,SACTC,OAAQ,UAGV,SAASC,EAAaC,EAAK9B,GACzB,OAAQA,GACN,IAAK,KACH,OAAO8B,EAAI9B,GAAQ,EAErB,QACE,OAAO8B,EAAI9B,GAEjB,CAEA,SAAS+B,EAAcC,GACrB,MAAMC,EAAWxB,OAAOyB,QAAQF,GAEhC,IAAIG,EAAe,GAEnB,IAAK,MAAML,KAAOG,EAChBE,GAAiB,+FACVL,EAAI,uBACDA,EAAI,wBAIhBN,EAAGY,OAAO,CACRC,MAAOL,EAAKhC,KACZsC,QAASH,EACTI,MAAM,GAEV,CAGA,MAAM,SAAEC,KAAaC,GAAWvB,EAAM,GAChCwB,EAAUjC,OAAOC,KAAK+B,GAAQE,KAAKC,IAChC,CACL5C,KAAM4C,EACNC,UAAU,EACVC,MAAOrB,EAAoBmB,GAC3BG,MAAO,OACPC,MAAQlB,GAAQD,EAAaC,EAAKc,GAClCK,OAASC,GAAS,GAAEA,IACpBC,UAAU,MAIRC,EAAS/B,EAAMd,MACf8C,GAAcxD,EAAAA,EAAAA,IAAIuD,G,OACxBjD,EAAAA,EAAAA,IAAMkD,GAAa,EAAGrD,OAAME,YAC1BqB,EAAKf,MAAQU,EAAMnB,QAAQuD,KAEtBtD,GAAOsD,EAAKtD,KAAKuD,QAAQvD,GAAQ,MACjCE,GAAQoD,EAAKpD,MAAMqD,QAAQrD,GAAS,IAEvC,I,uzBCzFJ,GAAesD,EAAAA,EAAAA,GAAgB,CAC7BxD,KAAM,MAENF,MAAO,CACLA,MAAOW,OACPgD,QAASC,SAGXC,MAAO7D,GAAO,MAAE8D,IACd,MAAMC,GAAUC,EAAAA,EAAAA,KAAS,IACvB,aACmB,IAAhBhE,EAAMA,QAA2C,IAAvBA,EAAMA,MAAMiE,OAAkB,GAAK,IAAMjE,EAAMA,MAAMkE,aAC7D,IAAlBlE,EAAM2D,QAAmB,kBAAoB,MAGlD,MAAO,KAAMQ,EAAAA,EAAAA,GAAE,KAAM,CAAEC,MAAOL,EAAQrD,QAAS2D,EAAAA,EAAAA,IAAMP,EAAMQ,SAC7D,I,UClBF,MAAM,EAAc,EAEpB,QAKA,IAAS,EAAQ,aAAc,CAACC,OAAM,QAAI,UAAQ,K","sources":["webpack://teleport/./node_modules/quasar/src/composables/use-quasar.js","webpack://teleport/./src/components/TableFilter.vue","webpack://teleport/./src/components/TableFilter.vue?2750","webpack://teleport/./src/views/UsersView.vue","webpack://teleport/./node_modules/quasar/src/components/table/QTr.js","webpack://teleport/./src/views/UsersView.vue?5902"],"sourcesContent":["import { inject } from 'vue'\nimport { quasarKey } from '../utils/private/symbols.js'\n\n/**\n * Returns the $q instance.\n * Equivalent to `this.$q` inside templates.\n */\nexport default function useQuasar () {\n  return inject(quasarKey)\n}\n","<!-- eslint-disable no-unused-vars -->\r\n<template>\r\n  <form class=\"row q-mb-lg q-col-gutter-lg\">\r\n    <div class=\"col-6 q-mb-md\">\r\n      <q-input outlined label=\"Имя пользователя\" v-model=\"userName\" dense />\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <q-input\r\n        mask=\"+7 (###) ## ## ###\"\r\n        outlined\r\n        label=\"Телефон пользователя\"\r\n        v-model=\"userPhone\"\r\n        dense\r\n      />\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineEmits, defineProps, ref, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nconst props = defineProps({\r\n  filter: Object,\r\n});\r\n\r\nconst router = useRouter();\r\nconst emit = defineEmits([\"update:filter\"]);\r\n\r\nconst userName = ref(props.filter.name);\r\nconst userPhone = ref(props.filter.phone);\r\n\r\nwatch([userName, userPhone], ([newUserName, newUserPhone]) => {\r\n  emit(\"update:filter\", { name: newUserName, phone: newUserPhone });\r\n  const query = { name: userName.value, phone: userPhone.value };\r\n\r\n  Object.keys(query).forEach((key) => {\r\n    if (!query[key]) {\r\n      delete query.key;\r\n    }\r\n  });\r\n\r\n  router.push({ query });\r\n});\r\n</script>\r\n","import script from \"./TableFilter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TableFilter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput});\n","<template>\r\n  <TableFilter v-model:filter=\"filterValue\" />\r\n  <q-table\r\n    title=\"Cписок пользователей\"\r\n    :rows=\"rows\"\r\n    :columns=\"columns\"\r\n    row-key=\"name\"\r\n  >\r\n    <template v-slot:body=\"row\">\r\n      <q-tr @click=\"showUserModal(row.row)\" class=\"cursor-pointer\">\r\n        <template v-for=\"col in row.cols\" :key=\"col.name\">\r\n          <td v-if=\"col.name === 'status'\">\r\n            <q-toggle v-model=\"row.row.status\"></q-toggle>\r\n          </td>\r\n          <td v-else>{{ col.value }}</td>\r\n        </template>\r\n      </q-tr>\r\n    </template>\r\n  </q-table>\r\n</template>\r\n\r\n<script setup>\r\nimport TableFilter from \"@/components/TableFilter.vue\";\r\n\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { useQuasar } from \"quasar\";\r\nimport { watch, ref } from \"vue\";\r\n\r\nconst store = useStore();\r\nconst users = store.state.users.usersData;\r\nconst route = useRoute();\r\nlet rows = ref(users);\r\nconst $q = useQuasar();\r\n\r\nconst colsTitlesTranslate = {\r\n  id: \"Идентификатор\",\r\n  name: \"ФИО\",\r\n  phone: \"Телефон\",\r\n  balance: \"Баланс\",\r\n  status: \"Статус\",\r\n};\r\n\r\nfunction fieldHandler(row, name) {\r\n  switch (name) {\r\n    case \"id\":\r\n      return row[name] + 1;\r\n\r\n    default:\r\n      return row[name];\r\n  }\r\n}\r\n\r\nfunction showUserModal(data) {\r\n  const elements = Object.entries(data);\r\n\r\n  let templateHtml = \"\";\r\n\r\n  for (const row of elements) {\r\n    templateHtml += `<div style=\"border-bottom: 1px dashed #666;\" class=\"row justify-between q-mb-md\">\r\n      <b>${row[0]}</b>\r\n      <span>${row[1]}</span>\r\n    </div>`;\r\n  }\r\n\r\n  $q.dialog({\r\n    title: data.name,\r\n    message: templateHtml,\r\n    html: true,\r\n  });\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst { password, ...fields } = users[0];\r\nconst columns = Object.keys(fields).map((colName) => {\r\n  return {\r\n    name: colName,\r\n    required: true,\r\n    label: colsTitlesTranslate[colName],\r\n    align: \"left\",\r\n    field: (row) => fieldHandler(row, colName),\r\n    format: (val) => `${val}`,\r\n    sortable: true,\r\n  };\r\n});\r\n\r\nconst params = route.query;\r\nconst filterValue = ref(params);\r\nwatch(filterValue, ({ name, phone }) => {\r\n  rows.value = users.filter((user) => {\r\n    return (\r\n      (name ? user.name.indexOf(name) + 1 : true) &&\r\n      (phone ? user.phone.indexOf(phone) + 1 : true)\r\n    );\r\n  });\r\n});\r\n</script>\r\n","import { h, computed } from 'vue'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hSlot } from '../../utils/private/render.js'\n\nexport default createComponent({\n  name: 'QTr',\n\n  props: {\n    props: Object,\n    noHover: Boolean\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() =>\n      'q-tr'\n      + (props.props === void 0 || props.props.header === true ? '' : ' ' + props.props.__trClass)\n      + (props.noHover === true ? ' q-tr--no-hover' : '')\n    )\n\n    return () => h('tr', { class: classes.value }, hSlot(slots.default))\n  }\n})\n","import script from \"./UsersView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UsersView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__\nimport QTable from 'quasar/src/components/table/QTable.js';\nimport QTr from 'quasar/src/components/table/QTr.js';\nimport QToggle from 'quasar/src/components/toggle/QToggle.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QTable,QTr,QToggle});\n"],"names":["useQuasar","inject","quasarKey","router","useRouter","userName","ref","props","filter","name","userPhone","phone","watch","newUserName","newUserPhone","emit","query","value","Object","keys","forEach","key","push","__exports__","QInput","store","useStore","users","state","usersData","route","useRoute","rows","$q","colsTitlesTranslate","id","balance","status","fieldHandler","row","showUserModal","data","elements","entries","templateHtml","dialog","title","message","html","password","fields","columns","map","colName","required","label","align","field","format","val","sortable","params","filterValue","user","indexOf","createComponent","noHover","Boolean","setup","slots","classes","computed","header","__trClass","h","class","hSlot","default","QTable"],"sourceRoot":""}